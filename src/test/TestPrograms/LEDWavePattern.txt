# Turn on all LEDs in led_reg
li t0 0x430 # led_reg address
li t6 0xFFFF # Enable all LEDs
sw t6 0(t0)  # Store to MemoryMappedIO

li t0 0xFFFFFFEF # Value for setting bit 4 = 0
li t1 0x440 # pwm_reg base address
li t2 0x00 # base_pwm_shift
# LED PWM values
li s0 0
li s1 6
li s2 30
li s3 255
li s4 255
li s5 30
li s6 6
li s7 0
store_pwm_values: # Cycle through PWM values on each LED
	add t6 t2 t1	# current_pwm_address
    sb s0 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s1 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s2 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s3 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s4 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s5 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s6 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM
    addi t6 t6 1	# increment current_pwm_address
    and t6 t6 t0	# remove higher address bits (loop around LEDs if necessary)
    sb s7 0(t6)	# Store PWM

    addi t2 t2 1 	# increment base_pwm_shift
    andi t2 t2 0xF	# remove higher address bits (loop around LEDs if necessary)
counter:
	li t4 0 	  # Counter reset
    li t5 1		  # counter target init
    slli t5 t5 22 # counter target bitshift
counter_loop:
	addi t4 t4 1	# increment counter
    blt t4 t5 counter_loop
    nop # Justin Case
    nop # Justin Case
    j store_pwm_values
reset_LEDs:
	li t0 0xFF
	sb t0 0(t1)
    sb t0 1(t1)
    sb t0 2(t1)
    sb t0 3(t1)
    sb t0 4(t1)
    sb t0 5(t1)
    sb t0 6(t1)
    sb t0 7(t1)
    sb t0 8(t1)
    sb t0 9(t1)
    sb t0 10(t1)
    sb t0 11(t1)
    sb t0 12(t1)
    sb t0 13(t1)
    sb t0 14(t1)
    sb t0 15(t1)
    li t0 0x0 # no bits on
    li t1 0x430 # led_reg address
    sh t0 0(t1) # turn off all leds
